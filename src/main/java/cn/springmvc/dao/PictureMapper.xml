<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.PictureMapper" >
  <resultMap id="BaseResultMap" type="cn.springmvc.entity.Picture" >
    <id column="pic_id" property="picId" jdbcType="VARCHAR" />
    <result column="pic_name" property="picName" jdbcType="VARCHAR" />
    <result column="pic_type" property="picType" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="pro_name" property="proName" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="VARCHAR" />
    <result column="delete_flag" property="deleteFlag" jdbcType="CHAR" />
    <result column="hot" property="hot" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pic_id, pic_name, pic_type, user_id, username, pro_name, upload_time, delete_flag, 
    hot
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.springmvc.entity.PictureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart > -1" >
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from picture
    where pic_id = #{picId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from picture
    where pic_id = #{picId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.springmvc.entity.PictureExample" >
    delete from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.springmvc.entity.Picture" >
    insert into picture (pic_id, pic_name, pic_type, 
      user_id, username, pro_name, 
      upload_time, delete_flag, hot
      )
    values (#{picId,jdbcType=VARCHAR}, #{picName,jdbcType=VARCHAR}, #{picType,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, 
      #{uploadTime,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=CHAR}, #{hot,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.entity.Picture" >
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="picName != null" >
        pic_name,
      </if>
      <if test="picType != null" >
        pic_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="proName != null" >
        pro_name,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="hot != null" >
        hot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="picId != null" >
        #{picId,jdbcType=VARCHAR},
      </if>
      <if test="picName != null" >
        #{picName,jdbcType=VARCHAR},
      </if>
      <if test="picType != null" >
        #{picType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="hot != null" >
        #{hot,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.springmvc.entity.PictureExample" resultType="java.lang.Integer" >
    select count(*) from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update picture
    <set >
      <if test="record.picId != null" >
        pic_id = #{record.picId,jdbcType=VARCHAR},
      </if>
      <if test="record.picName != null" >
        pic_name = #{record.picName,jdbcType=VARCHAR},
      </if>
      <if test="record.picType != null" >
        pic_type = #{record.picType,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.proName != null" >
        pro_name = #{record.proName,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null" >
        upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.hot != null" >
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update picture
    set pic_id = #{record.picId,jdbcType=VARCHAR},
      pic_name = #{record.picName,jdbcType=VARCHAR},
      pic_type = #{record.picType,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      pro_name = #{record.proName,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=CHAR},
      hot = #{record.hot,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.entity.Picture" >
    update picture
    <set >
      <if test="picName != null" >
        pic_name = #{picName,jdbcType=VARCHAR},
      </if>
      <if test="picType != null" >
        pic_type = #{picType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=INTEGER},
      </if>
    </set>
    where pic_id = #{picId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.entity.Picture" >
    update picture
    set pic_name = #{picName,jdbcType=VARCHAR},
      pic_type = #{picType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      pro_name = #{proName,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=CHAR},
      hot = #{hot,jdbcType=INTEGER}
    where pic_id = #{picId,jdbcType=VARCHAR}
  </update>
</mapper>